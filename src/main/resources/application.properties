#Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/setoo_communication_service?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=

# spring.datasource.driver-class-name=org.mariadb.jdbc.Driver

#Hibernate Configuration
# Show or not log for each sql query
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.show_sql=false

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in the project
# create, create-drop, validate, update, none
spring.jpa.hibernate.ddl-auto=create
#do not load all the data at once... (c) Zeev
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
#spring.jpa.properties.hibernate.enable_lazy_load_no_trans=false

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect

# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
spring.jpa.open-in-view=false

# Spring Data Rest Setup
spring.data.rest.base-path=/api

# Spring Server setup
server.address=127.0.0.1
server.port=8080
server.compression.enabled=true
server.http2.enabled=true

# https://www.baeldung.com/sql-logging-spring-boot
logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.SQL=INFO
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=INFO
#logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
#logging.level.org.springframework.jdbc.core.StatementCreatorUtils=TRACE

#remove all excessive rows
#logging.level.root = OFF

#increase connection pool to 15 (max 20, default 10)
spring.datasource.hikari.maximum-pool-size=15

# actualization.delay=PT5S

#How many threads might work simultaneously with @Scheduling. The default is 1.
spring.task.scheduling.pool.size=5

# spring.jackson.serialization.fail-on-empty-beans=false

#sending service
#twilio.use = ${TWILIO}
twilio.use=false
communication.provider=twilio